<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io</link></image><lastBuildDate>Sat, 06 Sep 2025 08:53:34 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>垃圾回收机制</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io/post/la-ji-hui-shou-ji-zhi.html</link><description>## 前言
Java 相比 C/C++ 最显著的特点便是**引入了自动垃圾回收** (下文统一用 GC 指代自动垃圾回收)，它解决了 C/C++ 最令人头疼的内存管理问题，让程序员专注于程序本身，不用关心内存回收这些恼人的问题，这也是 Java 能大行其道的重要原因之一，GC 真正让程序员的生产力得到了释放，但是程序员很难感知到它的存在，这就好比，我们吃完饭后在桌上放下餐盘即走，服务员会替你收拾好这些餐盘，你不会关心服务员什么时候来收，怎么收。</description><guid isPermaLink="true">https://shuaiwang888.github.io/appStore-Blog.github.io/post/la-ji-hui-shou-ji-zhi.html</guid><pubDate>Sat, 06 Sep 2025 08:53:10 +0000</pubDate></item><item><title>Java中那18 把锁</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io/post/Java-zhong-na-18%20-ba-suo.html</link><description>### [互斥锁、自旋锁、读写锁、悲观锁、乐观锁的应用场景](https://mp.weixin.qq.com/s/6QrQ0TZVqSQq26Rms0_mvA)

## 一、乐观锁和悲观锁

### 1. 悲观锁

悲观锁对应于生活中悲观的人，悲观的人总是想着事情往坏的方向发展。</description><guid isPermaLink="true">https://shuaiwang888.github.io/appStore-Blog.github.io/post/Java-zhong-na-18%20-ba-suo.html</guid><pubDate>Sat, 06 Sep 2025 08:49:24 +0000</pubDate></item><item><title>RAG</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io/post/RAG.html</link><description># 大模型知识问答RAG

## 一、RAG

&gt; **RAG主要涉及企业内部的文档数据，如果需要一些插件功能，只能需要外部Function calling调用等操作；**

大模型缺点：知识不是实时的、不知道私有领域的业务知识。</description><guid isPermaLink="true">https://shuaiwang888.github.io/appStore-Blog.github.io/post/RAG.html</guid><pubDate>Wed, 18 Jun 2025 10:57:45 +0000</pubDate></item><item><title>第一篇博客</title><link>https://shuaiwang888.github.io/appStore-Blog.github.io/post/di-yi-pian-bo-ke.html</link><description>## 第一

### 第二

- ![Image](https://github.com/user-attachments/assets/49178100-4fd3-41c1-8f76-15531692576e)

Retrieval-Augmented Generation（RAG） 将“检索”与“生成”结合，保障回答的 **事实准确性** 与 **自然表达**。</description><guid isPermaLink="true">https://shuaiwang888.github.io/appStore-Blog.github.io/post/di-yi-pian-bo-ke.html</guid><pubDate>Wed, 18 Jun 2025 10:54:31 +0000</pubDate></item></channel></rss>